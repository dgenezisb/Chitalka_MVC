@model BooksListViewModel

@{
    ViewData["Title"] = "Books";
}
<div class="row" style="border-bottom: 2px solid rgba(0, 0, 0, 0.125);">
    <form asp-action="List">
        <input asp-for="Options.AuthorName" placeholder="Search by author" />
        <input asp-for="Options.Title" placeholder="Search by title" />
        @await Component.InvokeAsync("ListGenres", new{aspFor="Options.GenreIds", selectedGenres=new int[]{0}})
       <input type="submit" value="Search" class="btn btn-primary" />
    </form>
</div>

<div class="row" style="margin-left:6%;margin-right:0%;margin-top:2%;">
@{

    foreach (var item in Model.Books)
    {
        <div class="card" style="width: 20%;margin:1.5%;height:400px;">
            <img src=@item.ImagePath class="card-img-top" style="width: 100%;height:65%;" asp-append-version="true">
            <div class="card-body">
                <a asp-action="Details" asp-route-id="@item.Id" class="nav-link">@Html.DisplayFor(modelItem => item.Name)</a>
                <p class="card-text">by @Html.DisplayFor(modelItem => item.Author.Name)</p>
                    @{
                        int i;
                        for(i=0;i<4&&i<item.Genres.Count;i++)
                        {
                            <d>
                            @item.Genres[i].Name
                            </d>
                        }
                        if (i < item.Genres.Count)
                        {
                            <d>
                            ...
                            </d>
                        }
                    } 
            </div>
        </div>
    }

}

</div>  
